{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/registration.service.ts","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/registration/registration.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div>\\r\\n  <h1>About Us</h1>\\r\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-sm navbar-light\\\">\\r\\n  <div class=\\\"navbar-header\\\">\\r\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\"><img src=\\\"../aicd-logo-desktop.png\\\" /></a>\\r\\n  </div>\\r\\n</nav>\\r\\n<nav class=\\\"navbar navbar-expand-sm bg-light navbar-light\\\">\\r\\n  <ul class=\\\"navbar-nav\\\">\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/about\\\" routerLinkActive=\\\"active\\\">About Us</a>\\r\\n    </li>\\r\\n    <li class=\\\"nav-item\\\">\\r\\n      <a class=\\\"nav-link\\\" routerLink=\\\"/contact\\\" routerLinkActive=\\\"active\\\">Contact Us</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ClientApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\n\n// Services\nimport { RegistrationService } from './registration.service';\n\n//Routes  \r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\r\n  { path: 'home', component: RegistrationComponent },\r\n  { path: 'about', component: AboutComponent },\r\n  { path: 'contact', component: ContactComponent }\n]; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegistrationComponent,\n    HomeComponent,\n    AboutComponent,\n    ContactComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [RegistrationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div>\\r\\n  <h1>Contact Us</h1>\\r\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h1>Home</h1>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Course } from './registration/course';\r\nimport { catchError, map } from \"rxjs/internal/operators\";\r\nimport { RegistrationModel } from './registration/registration';\r\n\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'//,\r\n    //'Access-Control-Allow-Origin': '*'\r\n  })\r\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n  public registration: RegistrationModel;\n  private baseUrl: string = \"https://localhost:44364\";\n\n  constructor(private http: HttpClient) { }\n\n  getAllCourses(): Observable<Course[]> {\n    return this.http.get<Course[]>(this.baseUrl + '/api/registration/course')\n                    .pipe(catchError(this.errorHandler));\n  }\n\n  addRegistration(registration: RegistrationModel): Observable<string> {\n    let body = JSON.stringify(registration);\r\n    return this.http.post(this.baseUrl + \"/api/registration\", body, httpOptions)\n      .pipe(map(response => response = 'Success'))\n      .pipe(catchError(this.errorHandler));\n  }\n\n  errorHandler(error: HttpErrorResponse) {\r\n    return throwError(error.message || \"Server Error\");\r\n  }\r\n}\n","module.exports = \"body {\\n  margin: 0;\\n  font-size: .9rem;\\n  font-weight: 400;\\n  line-height: 1.6;\\n  color: #212529;\\n  text-align: left;\\n  background-color: #f5f8fa;\\n}\\n\\n.navbar-laravel {\\n  box-shadow: 0 2px 4px rgba(0,0,0,.04);\\n}\\n\\n.navbar-brand, .nav-link, .my-form, .login-form {\\n  font-family: Raleway, sans-serif;\\n}\\n\\n.my-form {\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n}\\n\\n.my-form .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n.login-form {\\n  padding-top: 1.5rem;\\n  padding-bottom: 1.5rem;\\n}\\n\\n.login-form .row {\\n    margin-left: 0;\\n    margin-right: 0;\\n  }\\n\\n.user-message {\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid mb-5\\\">\\r\\n<div class=\\\"alert alert-success user-message\\\" *ngIf=\\\"submitted && isSuccess\\\">Data submitted successfully!</div>\\r\\n<div class=\\\"alert alert-danger user-message\\\" *ngIf=\\\"errorMsg && !isSuccess\\\">{{errorMsg}}</div>\\r\\n<form #registrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" novalidate>\\r\\n  \\r\\n  <div class=\\\"my-form\\\">\\r\\n    <div class=\\\"cotainer\\\">\\r\\n      <div class=\\\"row justify-content-center\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header\\\">Register  for Course</div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <fieldset [disabled]=\\\"isSuccess\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"course\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Course</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <select (blur)=\\\"validateCourse(course.value)\\\" (change)=\\\"validateCourse(course.value)\\\" class=\\\"custom-select\\\" #course=\\\"ngModel\\\"\\r\\n                            [class.is-invalid]=\\\"courseHasError && course.touched\\\" name=\\\"course\\\" [(ngModel)]=\\\"registrationModel.coursename\\\">\\r\\n                      <option value=\\\"default\\\">I am interested in</option>\\r\\n                      <option value=\\\"{{course.name}}\\\" *ngFor=\\\"let course of courses\\\">{{ course.name }}</option>\\r\\n                    </select>\\r\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"!courseHasError || course.untouched\\\">Please select course</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"date\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Course Date</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <label for=\\\"staticDate\\\" class=\\\"col-form-label\\\">{{ courseDate | date: 'dd/MM/yyyy' }}</label>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"name\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Name</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" required #name=\\\"ngModel\\\"\\r\\n                           [class.is-invalid]=\\\"name.invalid && name.touched\\\" name=\\\"name\\\" [(ngModel)]=\\\"registrationModel.name\\\" maxlength=\\\"50\\\">\\r\\n                    <small class=\\\"invalid-feedback\\\">Name is required</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                  <label for=\\\"email\\\" class=\\\"col-md-4 col-form-label text-md-right\\\">Email</label>\\r\\n                  <div class=\\\"col-md-6\\\">\\r\\n                    <input type=\\\"email\\\" class=\\\"form-control\\\" #email=\\\"ngModel\\\" pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" maxlength=\\\"60\\\"\\r\\n                           [class.is-invalid]=\\\"email.invalid && email.touched\\\" required name=\\\"email\\\" [(ngModel)]=\\\"registrationModel.email\\\">\\r\\n                    <small class=\\\"invalid-feedback\\\">Email is not valid</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n\\r\\n              </fieldset>\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col-md-6 offset-md-4\\\">\\r\\n                  <button [disabled]=\\\"registrationForm.form.invalid || courseHasError || isSuccess\\\" class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Register</button>\\r\\n                  <button [hidden]=\\\"!isSuccess\\\" (click)=\\\"addNew(); registrationForm.reset()\\\" class=\\\"btn btn-primary offset-md-2\\\" type=\\\"button\\\">Add New</button>\\r\\n                </div>\\r\\n              </div>\\r\\n              </div>\\r\\n            </div>\\r\\n        </div>\\r\\n      </div>\\r\\n     </div>\\r\\n  </div>\\r\\n</form>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { RegistrationService } from '../registration.service';\r\nimport { RegistrationModel } from './registration';\r\nimport { Course } from './course';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  courses: Course[] = []\n  errorMsg = \"\";\n  isSuccess = false;\n  courseHasError = true;\n  submitted = false;\n  courseDate: Date;\n\n  registrationModel = new RegistrationModel('default', '',null,'');\n\n  constructor(private registrationService: RegistrationService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.registrationService.getAllCourses()\n      .subscribe(\r\n        data => this.courses = data,\r\n        error => this.errorMsg = this.FailureResponse(error))\n  }\n\n  FailureResponse(error) {\r\n    this.isSuccess = false;\r\n    console.log(error);\r\n    return error;\r\n  }\n\n  validateCourse(value) {\r\n    if (value === \"default\") {\r\n      this.courseHasError = true;\r\n      this.courseDate = null;\r\n    } else {\r\n      this.courseHasError = false;\r\n      var c = this.courses.find(a => a.name == value);\r\n      this.courseDate = c.date;\r\n      this.registrationModel.datetime = this.courseDate;\r\n    }\r\n  }\n\n  SuccessResponse(data) {\r\n    return data;\r\n  }\n\n  RegistrationSuccessResponse(data) {\r\n    this.isSuccess = true;\r\n    return data;\r\n  }\n\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.registrationService.addRegistration(this.registrationModel)\r\n      .subscribe(\r\n      data => this.RegistrationSuccessResponse(data),\r\n        error => this.errorMsg = this.FailureResponse(error)\r\n      )\r\n  }\n\n  addNew() {\n    this.submitted = false;\n    this.isSuccess = false;\n    this.courseHasError = false;\n    this.courseDate = null;\n  }\n\n}\n","export class RegistrationModel {\r\n  constructor(\r\n    public coursename: string,\r\n    public email: string,\r\n    public datetime: Date,\r\n    public name: string\r\n  ) { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}